<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
		<artifactId>common-workflow-service</artifactId>
		<version>2.2.0</version><!-- update this each CWS release -->
	</parent>
	<artifactId>cws-test</artifactId>
	
	<properties>
		<lib.directory>./cws-test-libs</lib.directory>
	</properties>
	
	<dependencies>

		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<dependency>
			<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
			<artifactId>cws-tasks</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>spring-test</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
			<artifactId>cws-adaptation</artifactId>
		</dependency>
		
		<dependency>
			<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
			<artifactId>cws-adaptation-engine</artifactId>
		</dependency>
		
		<dependency>
			<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
			<artifactId>cws-service</artifactId>
		</dependency>
		
		<dependency>
			<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
			<artifactId>cws-core</artifactId>
		</dependency>
		
		<dependency>
			<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
			<artifactId>cws-installer</artifactId>
		</dependency>
		
		<dependency>
			<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
			<artifactId>cws-engine-service</artifactId>
		</dependency>
		
		<dependency>
			<groupId>dumbster</groupId>
			<artifactId>dumbster</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.glassfish.grizzly</groupId>
			<artifactId>grizzly-http-server</artifactId>
		</dependency>

		<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-java</artifactId>
			</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-chrome-driver</artifactId>
		</dependency>
		
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.jacoco</groupId>
			<artifactId>jacoco-maven-plugin</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.camunda.bpm.extension</groupId>
			<artifactId>camunda-bpm-assert</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<artifactId>*</artifactId>
					<groupId>org.springframework</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>test</scope>
		</dependency>
		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<configuration>
					<includes>
						<include>**/*</include>
					</includes>
				</configuration>
				<executions>
					<execution>
						<id>pre-unit-test</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>
							<destFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</destFile>
							<propertyName>surefireArgLine</propertyName>
						</configuration>
					</execution>
					<execution>
						<id>pre-integration-test</id>
						<goals>
							<goal>prepare-agent-integration</goal>
						</goals>
                        <configuration>
                            <destFile>${project.build.directory}/coverage-reports/jacoco-it.exec</destFile>
                            <propertyName>testArgLine</propertyName>
                        </configuration>
                    </execution>
                    <execution>
                            <id>post-integration-test</id>
                            <phase>post-integration-test</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/coverage-reports/jacoco-it.exec</dataFile>
                                <outputDirectory>${project.build.directory}/../../jacoco-reports/it</outputDirectory>
                                <includes>
				                	<include>**/*</include>
				                </includes>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-unit-test</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/coverage-reports/jacoco-ut.exec</dataFile>
                                <outputDirectory>${project.build.directory}/../../jacoco-reports/ut</outputDirectory>
                         		<includes>
				                	<include>**/*</include>
				                </includes>
                            </configuration>
                        </execution>
                        <execution>
                            <id>merge-results</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>merge</goal>
                            </goals>
                            <configuration>
                                <fileSets>
                                    <fileSet>
                                        <directory>${project.build.directory}/coverage-reports</directory>
                                        <includes>
                                            <include>*.exec</include>
                                        </includes>
                                        <excludes>
                                        	<exclude>aggregate.exec</exclude>
                                        </excludes>
                                    </fileSet>
                                    <fileSet>
                                        <directory>${project.build.directory}/../../dist/console-only/cws/server/apache-tomcat-${tomcat-catalina.version}/jacoco/</directory>
                                        <includes>
                                            <include>*.exec</include>
                                        </includes>
                                    </fileSet>
                                    <fileSet>
                                        <directory>${project.build.directory}/../../dist/worker1/cws/server/apache-tomcat-${tomcat-catalina.version}/jacoco/</directory>
                                        <includes>
                                            <include>*.exec</include>
                                        </includes>
                                    </fileSet>
                                    <fileSet>
                                        <directory>${project.build.directory}/../newCWSDir/console-only/cws/</directory>
                                        <includes>
                                            <include>*.exec</include>
                                        </includes>
                                    </fileSet>
                                </fileSets>
                                <destFile>${project.build.directory}/coverage-reports/aggregate.exec</destFile>
                            </configuration>
                        </execution>
                        <execution>
                            <id>post-merge-report</id>
                            <phase>verify</phase>
                            <goals>
                                <goal>report</goal>
                            </goals>
                            <configuration>
                                <dataFile>${project.build.directory}/coverage-reports/aggregate.exec</dataFile>
                                <outputDirectory>${project.build.directory}/../../jacoco-reports/aggregate</outputDirectory>
                                <includes>
				                	<include>**/*</include>
				                </includes>
                            </configuration>
                        </execution>
                <!--   Use when Integrated Tests are working
					<execution>
						<id>report-aggregate</id>
						<phase>verify</phase>
						<goals>
							<goal>report-aggregate</goal>
						</goals>
						<configuration>
						<dataFileIncludes>${project.build.directory}/coverage-reports/aggregate.exec</dataFileIncludes>
              				<outputDirectory>${project.build.directory}/../../jacoco</outputDirectory>
						</configuration>
					</execution>
				-->
				</executions>
			</plugin>
			<plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${maven-surefire-plugin.version}</version>
            <configuration>
                <argLine>${surefireArgLine} -Xms256m -Xmx2048m</argLine>
          <!--      <skipTests>${skip.unit.tests}</skipTests>  -->
                <includes>
                    <include>**/*UT.java</include>
                    <include>**/*MT.java</include>
                    <include>**/*Test.java</include>
                </includes>
                <excludes>
                	<exclude>**/*IT.java</exclude>
                </excludes>
        <!--        <skipTests>${skipUTMTs}</skipTests>  -->
            </configuration>
        </plugin>
			<plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-failsafe-plugin</artifactId>
            <version>${maven-failsafe-plugin.version}</version>
            <configuration>
                <argLine>${testArgLine}</argLine>
                <excludes>
                    <exclude>**/*UT*.java</exclude>
                </excludes>
                <includes>
                	<include>**/*IT.java</include>
                </includes>
                <skipTests>${skip.integration.tests}</skipTests>
            </configuration>
            <executions>
                <execution>
                    <goals>
                        <goal>integration-test</goal>
                        <goal>verify</goal>
                    </goals>
                </execution>
            </executions>
        </plugin>
        <plugin>
		    <groupId>org.apache.maven.plugins</groupId>
		    <artifactId>maven-install-plugin</artifactId>
		    <version>${maven-install-plugin.version}</version>
		  </plugin>
		  <plugin>
		    <groupId>org.codehaus.mojo</groupId>
		    <artifactId>exec-maven-plugin</artifactId>
		    <version>${exec-maven-plugin.version}</version>
		    <executions>
		      <execution>
		        <phase>post-integration-test</phase>
		        <goals>
		           <goal>exec</goal>
		        </goals>
		        <configuration>
		          <executable>stop_dev.sh</executable>
		          <workingDirectory>${project.build.directory}/../..</workingDirectory>
		        </configuration>
		      </execution>
		    </executions>
		  </plugin>
			<plugin>
		        <artifactId>maven-resources-plugin</artifactId>
		        <version>${maven-resources-plugin.version}</version>
		        <executions>
		          <execution>
		            <id>copy-resources</id>             
		            <phase>pre-integration-test</phase>
		            <goals>
		              <goal>copy-resources</goal>
		            </goals>
		            <configuration>
		              <outputDirectory>${project.build.directory}/classes</outputDirectory>
		              <resources>          
		                <resource>
		                  <directory>${project.build.directory}/../../cws-adaptation/target/classes</directory>
		                  <filtering>false</filtering>
		                </resource>	
		                <resource>
		                  <directory>${project.build.directory}/../../cws-adaptation-engine/target/classes</directory>
		                  <filtering>false</filtering>
		                </resource>		                
		                <resource>
		                  <directory>${project.build.directory}/../../cws-core/target/classes</directory>
		                  <filtering>false</filtering>
		                </resource>
		                <resource>
		                  <directory>${project.build.directory}/../../cws-engine/target/classes</directory>
		                  <filtering>false</filtering>
		                </resource>		                
	                	<resource>
		                  <directory>${project.build.directory}/../../cws-engine-service/target/classes</directory>
		                  <filtering>false</filtering>
		                </resource>	
		                <resource>
		                  <directory>${project.build.directory}/../../cws-installer/target/classes</directory>
		                  <filtering>false</filtering>
		                </resource>
                		<resource>
		                  <directory>${project.build.directory}/../../cws-service/target/classes</directory>
		                  <filtering>false</filtering>
		                </resource>	
			            <resource>
		                  <directory>${project.build.directory}/../../cws-tasks/target/classes</directory>
		                  <filtering>false</filtering>
		                </resource>
		                <resource>
		                  <directory>${project.build.directory}/../../cws-test/target/classes</directory>
		                  <filtering>false</filtering>
		                </resource>		              
		                <resource>
		                  <directory>${project.build.directory}/../../cws-ui/target/classes</directory>
		                  <filtering>false</filtering>
		                </resource>
		              </resources>
		            </configuration>
		          </execution>
		        </executions>
		    	</plugin>
                 <plugin>
                   <groupId>org.apache.maven.plugins</groupId>
                   <artifactId>maven-dependency-plugin</artifactId>
                   <version>${maven-dependency-plugin.version}</version>
                   <executions>
                           <execution>
                                   <id>copy-dependencies</id>
                                   <phase>package</phase>
                                   <goals>
                                           <goal>copy-dependencies</goal>
                                   </goals>
                                   <configuration>
                                           <outputDirectory>${lib.directory}</outputDirectory>
                                           <overWriteReleases>false</overWriteReleases>
                                           <excludeArtifactIds></excludeArtifactIds>
                                           <overWriteSnapshots>false</overWriteSnapshots>
                                           <overWriteIfNewer>true</overWriteIfNewer>
                                   </configuration>
                           </execution>
                   </executions>
           </plugin>
		</plugins>
	</build>

</project>
