CREATE TABLE IF NOT EXISTS cws_worker (
	id varchar(255) NOT NULL DEFAULT '',
	lock_owner varchar(255) DEFAULT NULL,
	name varchar(255) NOT NULL DEFAULT '',
	install_directory varchar(1000) DEFAULT NULL,
	cws_install_type varchar(255) NOT NULL DEFAULT '',
	cws_worker_type varchar(255) NOT NULL DEFAULT '',
	status varchar(255) DEFAULT NULL,
	job_executor_max_pool_size integer DEFAULT NULL,
	max_num_running_procs integer NOT NULL,
	active_count integer DEFAULT NULL,
	created_time timestamp DEFAULT NULL,
	last_heartbeat_time timestamp NOT NULL,
	disk_free_bytes bigint DEFAULT NULL,
	PRIMARY KEY (id),
	UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS cws_worker_tags (
	worker_id varchar(255) NOT NULL,
	name varchar(255) NOT NULL,
	value varchar(1000) DEFAULT NULL,
	created_time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	updated_time timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
	PRIMARY KEY (worker_id, name),
	CONSTRAINT FK_cws_worker_tags FOREIGN KEY (worker_id) REFERENCES cws_worker (id)
);

CREATE TABLE IF NOT EXISTS cws_external_worker (
	id varchar(255) NOT NULL DEFAULT '',
	name varchar(255) NOT NULL DEFAULT '',
	hostname varchar(255) NOT NULL DEFAULT '',
	activeTopics varchar(2000) DEFAULT NULL,
	currentTopic varchar(255) DEFAULT NULL,
	currentCommand varchar(4000) DEFAULT NULL,
	currentWorkingDir varchar(1000) DEFAULT NULL,
	created_time timestamp DEFAULT NULL,
	last_heartbeat_time timestamp NOT NULL,
	PRIMARY KEY (id, name),
	UNIQUE (name)
);


CREATE TABLE IF NOT EXISTS cws_log_usage (
	worker_id varchar(255) NOT NULL,
	filename varchar(255) NOT NULL,
	size_bytes bigint NOT NULL,
	PRIMARY KEY (worker_id, filename),
	CONSTRAINT FK_cws_worker_log_usage FOREIGN KEY (worker_id) REFERENCES cws_worker (id)
);


--  In Camunda 7.7 they got rid of KEY_ as a unique key, and therefore we can't create a foreign key on it anymore.
--  CONSTRAINT `FK_ACT_RE_PROCDEF` FOREIGN KEY (`proc_def_key`) REFERENCES `ACT_RE_PROCDEF` (`KEY_`),
CREATE TABLE IF NOT EXISTS cws_worker_proc_def (
	worker_id varchar(255) NOT NULL,
	proc_def_key varchar(255) NOT NULL,
	max_instances integer DEFAULT NULL,
	deployment_id varchar(64) DEFAULT NULL,
	accepting_new boolean NOT NULL,
	PRIMARY KEY (worker_id, proc_def_key),
	CONSTRAINT FK_cws_worker FOREIGN KEY (worker_id) REFERENCES cws_worker (id)
);
CREATE INDEX FK_ACT_RE_PROCDEF ON cws_worker_proc_def (proc_def_key);


CREATE TABLE IF NOT EXISTS cws_code (
	id serial PRIMARY KEY,
	code text NOT NULL
);

INSERT INTO cws_code (code)
VALUES (
'
__CUSTOM_METHODS_JAVA__
'
);

CREATE TABLE IF NOT EXISTS cws_code_inprogress (
	id serial PRIMARY KEY,
	code text NOT NULL
);


CREATE TABLE IF NOT EXISTS cws_sched_worker_proc_inst (
	uuid varchar(36) NOT NULL DEFAULT '',
	created_time timestamp NOT NULL,
	updated_time timestamp NOT NULL,
	proc_inst_id varchar(255) DEFAULT NULL,
	proc_def_key varchar(64) NOT NULL DEFAULT '',
	proc_business_key varchar(64) NOT NULL DEFAULT '',
	priority integer DEFAULT NULL,
	proc_variables bytea,
	status varchar(32) NOT NULL DEFAULT '',
	error_message varchar(4000) DEFAULT NULL,
	initiation_key varchar(2000) DEFAULT NULL,
	claimed_by_worker varchar(255) DEFAULT NULL,
	started_by_worker varchar(255) DEFAULT NULL,
	last_rejection_worker varchar(255) DEFAULT NULL,
	num_worker_attempts integer DEFAULT NULL,
	claim_uuid varchar(36) DEFAULT NULL,
	PRIMARY KEY (uuid)
);

CREATE INDEX uuid_status ON cws_sched_worker_proc_inst (uuid, status);
CREATE INDEX nothing_selected_order_by ON cws_sched_worker_proc_inst (proc_inst_id, created_time);
CREATE INDEX proc_inst_id ON cws_sched_worker_proc_inst (proc_inst_id);
CREATE INDEX claim_uuid ON cws_sched_worker_proc_inst (claim_uuid);
CREATE INDEX claimKey ON cws_sched_worker_proc_inst (status, proc_def_key, priority, created_time);


CREATE TABLE IF NOT EXISTS cws_token (
	token varchar(255) NOT NULL,
	username varchar(36) NOT NULL,
	expiration_time timestamp NOT NULL,
	PRIMARY KEY (token)
);
