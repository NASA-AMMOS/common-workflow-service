version: '3.2'

services:
  db:
    restart: always
    image: mariadb:10.3
    container_name: cws-db
    ports:
      - "3306:3306"
    command: mysqld --max-connections=2000 --transaction-isolation=READ-COMMITTED
    environment:
      - MYSQL_DATABASE=cws
      - MYSQL_ROOT_PASSWORD=test
      - TZ=America/Los_Angeles
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=test --execute \"SHOW DATABASES;\""
      interval: 3s
      timeout: 1s
      retries: 5
  #  networks:
  #    - backend
  es:
    labels:
      com.example.service: "es"
      com.example.description: "For searching and indexing data"
    image: elasticsearch:7.16.2
    container_name: cws-es
  #  networks:
  #    - frontend
  #    - backend
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - MAX_MAP_COUNT=262144
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    healthcheck:
        test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
        interval: 5s
        timeout: 2s
        retries: 12
    #ulimits:
      #memlock:
        #soft: -1
        #hard: -1
      #nofile:
        #soft: 65536
        #hard: 65536
    #mem_limit: 2g
#  kibana:
#    labels:
#      com.example.service: "kibana"
#      com.example.description: "Data visualisation and for log aggregation"
#    image: kibana:7.16.2
#    container_name: cws-kibana
#    ports:
#      - "5601:5601"
#    networks:
#      - frontend
#      - backend
#    environment:
#      - ELASTICSEARCH_HOSTS=http://es:9200
#    depends_on:
#      - es
#  logstash:
#    labels:
#      com.example.service: "logstash"
#      com.example.description: "For logging data"
#    image: logstash:7.16.2
#    container_name: cws-logstash
#    volumes:
#      - ./cws-logstash.conf:/home/cws_user/cws-logstash.conf:ro
#      - logs-volume:/cws_logs
#    command: logstash -f /home/cws_user/cws-logstash.conf
#    environment:
#      - XPACK_MONITORING_ENABLED=false
#    healthcheck:
#        test: ["CMD-SHELL", "curl --silent --fail localhost:9600 || exit 1"]
#        interval: 5s
#        timeout: 2s
#        retries: 12
#    depends_on:
#    - es
#    ports:
#      - "9600:9600"
#    networks:
#      - frontend
#      - backend
  cws:
    container_name: cws-console
    labels:
      com.example.service: "cws-server"
      com.example.description: "Common Workflow Service"
    image: nasa-ammos/common-workflow-service:2.4.0pre.1    # update this each CWS release
    depends_on:
      - db
      - es
#      - logstash
#      - kibana
    ports:
      - "38080:38080"
      - "38443:38443"
      - "31616:31616"
    hostname: cws-console
  #  networks:
  #    - frontend
  #    - backend
    environment:
       - DB_HOST=db
       - DB_USER=root
       - DB_PW=test
       - ES_PROTOCOL=http
       - ES_HOST=es
       - ES_PORT=9200
    healthcheck:
      test: ["CMD-SHELL", "curl -k --silent --fail https://localhost:38443/cws-ui/login || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 12
    volumes:
      - ./config.properties:/home/cws_user/config.properties:ro
      - logs-volume:/home/cws_user/cws/server/apache-tomcat-9.0.33/logs
  cws-worker:
    container_name: cws-worker1
    labels:
      com.example.service: "cws-worker1"
      com.example.description: "Common Workflow Service"
    image: nasa-ammos/common-workflow-service:2.4.0pre.1    # update this each CWS release
    depends_on:
      - db
      - es
      - cws
    hostname: cws-worker1
  #  networks:
  #    - frontend
  #    - backend
    environment:
      - DB_HOST=db
      - DB_USER=root
      - DB_PW=test
      - ES_PROTOCOL=http
      - ES_HOST=es
      - ES_PORT=9200
    volumes:
      - ./worker-config.properties:/home/cws_user/config.properties:ro
      - logs-volume:/home/cws_user/cws/server/apache-tomcat-9.0.33/logs

volumes:
  logs-volume:

networks:
  default:
    external:
      name: cws-network

