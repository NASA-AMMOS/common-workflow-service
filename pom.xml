<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
	<artifactId>common-workflow-service</artifactId>
	<version>2.1.0-pre.4</version><!-- update this each CWS release -->
	<packaging>pom</packaging>
	<name>cws</name>
	<description>CWS</description>
	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
		</license>
	</licenses>
	<scm>
		<url>https://github.com/NASA-AMMOS/${project.artifactId}/tree/master</url>
		<connection>scm:git:git://github.com/NASA-AMMOS/${project.artifactId}.git</connection>
		<developerConnection>scm:git:ssh://github.com:NASA-AMMOS/${project.artifactId}.git</developerConnection>
	</scm>

	<properties>
		<activemq.version>5.15.9</activemq.version>
		<activeio-core.version>3.1.4</activeio-core.version>
		<software.amazon.awssdk.version>2.16.93</software.amazon.awssdk.version>
		<!-- <boon.version>0.12</boon.version> -->
		<camunda.version>7.13.0</camunda.version>
		<camunda-spin.version>1.9.0</camunda-spin.version>
		<commons-compress.version>1.20</commons-compress.version>
		<commons-configuration.version>1.10</commons-configuration.version>
		<commons-exec.version>1.3</commons-exec.version>
		<commons-fileupload.version>1.3.3</commons-fileupload.version>
		<commons-io.version>2.4</commons-io.version>
		<commons-lang.version>2.6</commons-lang.version>
		<commons-email.version>1.3.2</commons-email.version>
		<cws.version>${project.version}</cws.version>
		<cws.core.version>${cws.version}</cws.core.version>
		<cws.tasks.version>${cws.version}</cws.tasks.version>
		<cws.service.version>${cws.version}</cws.service.version>
		<cws.adaptation.version>${cws.version}</cws.adaptation.version>
		<cws.installer.version>${cws.version}</cws.installer.version>
		<cws.engine.version>${cws.version}</cws.engine.version>
		<dumbster.version>1.6</dumbster.version>
		<freemarker.version>2.3.29</freemarker.version>
		<fst.version>1.55</fst.version> <!--  USE 1.35 for Java6, 1.55 for Java7 -->
		<grizzly-http-server.version>2.3.11</grizzly-http-server.version>
		<!-- <groovy.version>2.4.5</groovy.version> -->
		<gson.version>2.8.2</gson.version>
		<h2.version>1.2.132</h2.version>
		<!-- <httpclient.version>4.3</httpclient.version> -->
		<jacoco.version>0.8.2</jacoco.version>
		<java.version>1.8</java.version>
		<javax.mail.version>1.4.7</javax.mail.version>
		<jersey-client.version>2.6</jersey-client.version>
		<jms.version>1.1</jms.version>
		<joda-time.version>2.1</joda-time.version>
		<junit.version>4.13.1</junit.version>
		<jython-standalone.version>2.7.1b3</jython-standalone.version>
		<mariadb-java-client.version>2.7.2</mariadb-java-client.version>

		<maven-compiler-plugin.version>3.6.1</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>3.0.1</maven-dependency-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
		<maven-failsafe-plugin.version>2.22.0</maven-failsafe-plugin.version>
		<maven-surefire-plugin.version>2.22.0</maven-surefire-plugin.version>
		<mockito.version>1.9.5</mockito.version>
		<mybatis.version>3.5.3</mybatis.version>
		<mysql-connector.version>8.0.16</mysql-connector.version>
		<hikaricp.version>4.0.3</hikaricp.version>
		<phantomjsdriver.version>1.0.4</phantomjsdriver.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<quartz.version>2.3.2</quartz.version>
		<selenium.version>3.14.0</selenium.version>
		<servlet-api.version>3.1.0</servlet-api.version>
		<slf4j.version>1.7.26</slf4j.version>
		<skip.integration.tests>false</skip.integration.tests>
		<spring.framework.version>4.3.23.RELEASE</spring.framework.version>
		<surefire.version>2.22.0</surefire.version>
		<tomcat-catalina.version>9.0.33</tomcat-catalina.version>
		<urlrewritefilter.version>4.0.3</urlrewritefilter.version>
		<xbean-spring.version>3.17</xbean-spring.version>
		<xmlunit.version>2.6.2</xmlunit.version>
	</properties>

	<profiles>
		<profile>
			<id>core</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<modules>
				<module>cws-core</module>
				<module>cws-tasks</module>
				<module>cws-service</module>
				<module>cws-adaptation-engine</module>
				<module>cws-engine</module>
				<module>cws-engine-service</module>
				<module>cws-adaptation</module>
				<module>cws-ui</module>
				<module>cws-installer</module>
				<module>cws-test</module>
			</modules>
		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>maven2</id>
			<url>http://repo1.maven.org/maven2</url>
		</repository>
		<repository>
			<id>repository.jboss.org-public</id>
			<name>JBoss.org Maven repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
		</repository>
	</repositories>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
				<artifactId>cws-core</artifactId>
				<version>${cws.core.version}</version>
			</dependency>

			<dependency>
				<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
				<artifactId>cws-tasks</artifactId>
				<version>${cws.tasks.version}</version>
				<!-- <scope>provided</scope> -->
			</dependency>

			<dependency>
				<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
				<artifactId>cws-service</artifactId>
				<version>${cws.service.version}</version>
			</dependency>

			<!-- ADAPTATION PROJECTS -->
			<dependency>
				<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
				<artifactId>cws-adaptation</artifactId>
				<version>${cws.adaptation.version}</version>
			</dependency>

			<dependency>
				<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
				<artifactId>cws-adaptation-engine</artifactId>
				<version>${cws.adaptation.version}</version>
			</dependency>

			<dependency>
				<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
				<artifactId>cws-installer</artifactId>
				<version>${cws.installer.version}</version>
			</dependency>

			<dependency>
				<groupId>gov.nasa.jpl.ammos.ids.cws</groupId>
				<artifactId>cws-engine-service</artifactId>
				<version>${cws.engine.version}</version>
			</dependency>

			<!-- CAMUNDA -->
            <dependency>
                <groupId>org.camunda.bpm</groupId>
                <artifactId>camunda-bom</artifactId>
                <version>${camunda.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

			<dependency>
				<groupId>org.camunda.spin</groupId>
				<artifactId>camunda-spin-dataformat-all</artifactId>
				<scope>import</scope>
				<type>pom</type>
				<version>${camunda-spin.version}</version>
			</dependency>
			<dependency>
				<groupId>org.camunda.bpm</groupId>
				<artifactId>camunda-engine-plugin-spin</artifactId>
				<version>${camunda.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-framework-bom</artifactId>
                <version>${spring.framework.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

			<dependency>
				<groupId>org.camunda.bpm</groupId>
				<artifactId>camunda-engine</artifactId>
				<version>${camunda.version}</version>
				<exclusions>
					<!--<exclusion>-->
						<!--<artifactId>*</artifactId>-->
						<!--<groupId>org.springframework</groupId>-->
					<!--</exclusion>-->
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.python</groupId>
				<artifactId>jython-standalone</artifactId>
				<version>${jython-standalone.version}</version>
			</dependency>

			<!--  FIXME:  SHOULD THIS BE PROVIDED?? -->
			<dependency>
				<groupId>org.camunda.bpm</groupId>
				<artifactId>camunda-engine-spring</artifactId>
				<version>${camunda.version}</version>
				<!--<exclusions>-->
					<!--<exclusion>-->
						<!--<artifactId>*</artifactId>-->
						<!--<groupId>org.springframework</groupId>-->
					<!--</exclusion>-->
				<!--</exclusions>-->
			</dependency>

			<dependency>
				<groupId>org.camunda.bpm.identity</groupId>
				<artifactId>camunda-identity-ldap</artifactId>
				<version>${camunda.version}</version>
				<!--<exclusions>-->
					<!--<exclusion>-->
						<!--<artifactId>*</artifactId>-->
						<!--<groupId>org.springframework</groupId>-->
					<!--</exclusion>-->
				<!--</exclusions>-->
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>${servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>

			<!--  IS THIS NEEDED?? -->
			<dependency>
				<groupId>org.apache.tomcat</groupId>
				<artifactId>tomcat-catalina</artifactId>
				<version>${tomcat-catalina.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- AWS JAVA API -->
			<!-- https://mvnrepository.com/artifact/software.amazon.awssdk/bom -->
			<dependency>
				<groupId>software.amazon.awssdk</groupId>
				<artifactId>bom</artifactId>
				<version>${software.amazon.awssdk.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>${gson.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.jms</groupId>
				<artifactId>jms</artifactId>
				<version>${jms.version}</version>
			</dependency>

			<!-- Database drivers (MariaDB and MySQL supported) -->
			<dependency>
				<groupId>org.mariadb.jdbc</groupId>
				<artifactId>mariadb-java-client</artifactId>
				<version>${mariadb-java-client.version}</version>
			</dependency>
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector.version}</version>
			</dependency>

			<!-- HikariCP database connection pool -->
			<dependency>
				<groupId>com.zaxxer</groupId>
				<artifactId>HikariCP</artifactId>
				<version>${hikaricp.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Apache Commons -->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>${commons-lang.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-exec</artifactId>
				<version>${commons-exec.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-email</artifactId>
				<version>${commons-email.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons-fileupload.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-compress</artifactId>
				<version>${commons-compress.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.xbean</groupId>
				<artifactId>xbean-spring</artifactId>
				<version>${xbean-spring.version}</version>
			</dependency>

			<dependency> <!--  needed by commons-email -->
				<groupId>javax.mail</groupId>
				<artifactId>mail</artifactId>
				<version>${javax.mail.version}</version>
			</dependency>

			<!--  ACTIVEMQ DEPENDENCIES: http://activemq.apache.org/initial-configuration.html#InitialConfiguration-RequiredJARs -->
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-broker</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-client</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activeio-core</artifactId>
				<version>${activeio-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-kahadb-store</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.activemq</groupId>
				<artifactId>activemq-spring</artifactId>
				<version>${activemq.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jms_1.1_spec</artifactId>
				<version>1.1.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jta_1.0.1B_spec</artifactId>
				<version>1.0.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-j2ee-management_1.1_spec</artifactId>
				<version>1.0.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-jacc_1.1_spec</artifactId>
				<version>1.0.1</version>
			</dependency>
			<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
				<artifactId>geronimo-j2ee-connector_1.5_spec</artifactId>
				<version>2.0.0</version>
			</dependency>

			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${commons-configuration.version}</version>
			</dependency>

			<!-- LOGGING:  [Spring/JCL to log4j],  [CWS/slf4j to log4j] -->
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j.version}</version>
				<scope>provided</scope>
			</dependency>

			<!-- https://mvnrepository.com/artifact/log4j/apache-log4j-extras -->
			<dependency>
			    <groupId>log4j</groupId>
			    <artifactId>apache-log4j-extras</artifactId>
			    <version>1.2.17</version>
			</dependency>

			<!-- Spring Framework -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jms</artifactId>
				<version>${spring.framework.version}</version>
			</dependency>

			<dependency>
				<groupId>org.freemarker</groupId>
				<artifactId>freemarker</artifactId>
				<version>${freemarker.version}</version>
			</dependency>

			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>

			<!--  FIXME:  Does this need to be uncommented in order for groovy script tasks to work in models? -->
			<!--
			<dependency>
				<groupId>org.codehaus.groovy</groupId>
				<artifactId>groovy</artifactId>
				<version>${groovy.version}</version>
			</dependency>
			-->

			<dependency>
				<groupId>org.glassfish.jersey.core</groupId>
				<artifactId>jersey-client</artifactId>
				<version>${jersey-client.version}</version>
			</dependency>

			<dependency>
				<groupId>de.ruedigermoeller</groupId>
				<artifactId>fst</artifactId>
				<version>${fst.version}</version>
			</dependency>

			<!-- TESTING DEPENDENCIES -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.camunda.bpm.extension</groupId>
				<artifactId>camunda-bpm-assert</artifactId>
				<version>1.1</version>
				<scope>test</scope>
				<!--<exclusions>-->
					<!--<exclusion>-->
						<!--<artifactId>*</artifactId>-->
						<!--<groupId>org.springframework</groupId>-->
					<!--</exclusion>-->
				<!--</exclusions>-->
			</dependency>

			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz</artifactId>
				<version>${quartz.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.quartz-scheduler</groupId>
				<artifactId>quartz-jobs</artifactId>
				<version>${quartz.version}</version>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-java</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-chrome-driver</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.jacoco</groupId>
				<artifactId>org.jacoco.agent</artifactId>
				<version>${jacoco.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency> <!-- Test SMTP Server -->
				<groupId>dumbster</groupId>
				<artifactId>dumbster</artifactId>
				<version>${dumbster.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency> <!-- Test HTTP Server -->
				<groupId>org.glassfish.grizzly</groupId>
				<artifactId>grizzly-http-server</artifactId>
				<version>${grizzly-http-server.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- Needed for in-memory tests -->
			<dependency>
				<groupId>com.h2database</groupId>
				<artifactId>h2</artifactId>
				<version>${h2.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.tuckey</groupId>
				<artifactId>urlrewritefilter</artifactId>
				<version>${urlrewritefilter.version}</version>
			</dependency>

			<!-- Needed for XML comparison -->
			<dependency>
				<groupId>org.xmlunit</groupId>
				<artifactId>xmlunit-core</artifactId>
				<version>${xmlunit.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<!--  The below "distributionManagement" section defines where CWS-built -->
	<!--  artifacts are deployed to.  This deploy is invoked when Maven is   -->
	<!--  run with the "deploy" command-line argument.  This will be         -->
	<!--  run this way, when run from a CI system (e.g. Bamboo).  This also  -->
	<!--  requires that the settings.xml file has credentials specified,     -->
	<!--  because Artifactory only allows authorized users to deploy to it.  -->
	<distributionManagement>
		<!-- TODO: Needs repository to deploy CWS jars into -->
	</distributionManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>@project.groupId@</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>@project.version@</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
